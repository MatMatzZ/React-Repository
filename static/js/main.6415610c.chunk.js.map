{"version":3,"sources":["logo.svg","appStyles.module.css","components/Welcome.js","components/Message.js","components/Counter.js","components/ClassClick.js","components/FunctionClick.js","components/EventBind.js","components/ChildComponent.js","components/ParentComponent.js","components/UserGreeting.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Component","FunctionClick","ChildComponent","props","onClick","greetHandler","UserName","isLogged","type","value","username","onChange","handleUsernameChange","Comments","comments","handleCommentsChange","Topics","topicsList","topics","selTopic","handleTopicChange","map","topic","Form","event","setState","target","handleSubmit","alert","state","preventDefault","bind","onSubmit","this","comment","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gKAAAA,EAAOC,QAAU,IAA0B,kC,sECC3CD,EAAOC,QAAU,CAAC,QAAU,6B,wHCCNC,YCAAA,YCAAA,YCAGA,YCWVC,I,OCXSD,YCQTE,MARf,SAAwBC,GACpB,OACI,6BACI,4BAAQC,QAAS,kBAAID,EAAME,aAAa,WAAxC,kBCFkBL,YCD9B,SAASM,EAASH,GACd,OACIA,EAAMI,SAAW,6BAAK,4CAA6B,6BAAK,8CAIrCP,Y,kBCN3B,SAASM,EAASH,GACd,OACI,6BACI,2CACA,2BAAOK,KAAK,OAAOC,MAAON,EAAMO,SAAUC,SAAUR,EAAMS,wBAItE,SAASC,EAASV,GACd,OACI,6BACI,2CACA,8BAAUM,MAAON,EAAMW,SAAUH,SAAUR,EAAMY,wBAI7D,SAASC,EAAOb,GACZ,IAAMc,EAAad,EAAMe,OACzB,OACI,6BACI,wCACA,4BAAQT,MAAON,EAAMgB,SAAUR,SAAUR,EAAMiB,mBAC1CH,EAAWI,KAAI,SAAAC,GAAK,OAAG,4BAAQb,MAAOa,GAAQA,Q,IAuDhDC,E,kDAhDX,WAAYpB,GAAQ,IAAD,8BACf,cAAMA,IAYVS,qBAAuB,SAACY,GACpB,EAAKC,SAAS,CACVf,SAASc,EAAME,OAAOjB,SAfX,EAkBnBM,qBAAuB,SAACS,GACpB,EAAKC,SAAS,CACVX,SAASU,EAAME,OAAOjB,SApBX,EAuBnBW,kBAAoB,SAACI,GACjB,EAAKC,SAAS,CACVH,MAAME,EAAME,OAAOjB,SAzBR,EA4BnBkB,aAAe,SAACH,GACZI,MAAM,eAAD,OAAgB,EAAKC,MAAMnB,SAA3B,sBAAiD,EAAKmB,MAAMf,SAA5D,oBAAgF,EAAKe,MAAMP,QAChGE,EAAMM,kBA3BN,EAAKD,MAAQ,CACRnB,SAAS,GACTI,SAAS,GACTQ,MAAM,SAEX,EAAKV,qBAAuB,EAAKA,qBAAqBmB,KAA1B,gBAC5B,EAAKhB,qBAAuB,EAAKA,qBAAqBgB,KAA1B,gBAC5B,EAAKX,kBAAoB,EAAKA,kBAAkBW,KAAvB,gBACzB,EAAKJ,aAAe,EAAKA,aAAaI,KAAlB,gBAXL,E,qDAkCf,OACI,6BACI,2CACA,0BAAMC,SAAUC,KAAKN,cACjB,kBAAC,EAAD,CAAUjB,SAAUuB,KAAKJ,MAAMnB,SAAUE,qBAAsBqB,KAAKrB,uBACpE,kBAACC,EAAD,CAAUqB,QAASD,KAAKJ,MAAMf,SAAUC,qBAAsBkB,KAAKlB,uBACnE,kBAACC,EAAD,CAAQE,OAPL,CAAC,QAAQ,UAAU,OAOEC,SAAUc,KAAKJ,MAAMP,MAAOF,kBAAmBa,KAAKb,oBAC5E,4BAAQZ,KAAK,UAAb,gB,GA1CDR,aC8BJmC,E,uKAvCX,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,W,GAJUpC,aCPEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6415610c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"success\":\"appStyles_success__1Zl7A\"};","import React, {Component} from 'react'\r\n\r\nclass Welcome extends Component {\r\n    render() {\r\n        const {name,heroName} = this.props\r\n        return <h1>Welcome {name} a.k.a {heroName}</h1>\r\n    }\r\n}\r\n\r\nexport default Welcome","import React, {Component} from 'react'\r\n\r\nclass Message extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            message: 'Welcome visitor'\r\n        }\r\n    }\r\n    changeMessage(){\r\n        this.setState({\r\n            message: 'Thank you for subscribing!'\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n            <div>\r\n                <h1>{this.state.message}</h1>\r\n                <button onClick={()=>this.changeMessage()}>Subscribe</button>\r\n            </div>\r\n        ) \r\n    }\r\n}\r\n\r\nexport default Message","import React, { Component } from 'react'\r\n\r\nclass Counter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             count:0\r\n        }\r\n    }\r\n    increment(){\r\n        this.setState({\r\n            count: this.state.count+=1\r\n        }, ()=>{console.log('Callback value: ', this.state.count)})\r\n    }\r\n    decrement(){\r\n        this.setState({\r\n            count: this.state.count-=1\r\n        },()=>{console.log('Callback value: ', this.state.count)})\r\n    }\r\n    incrementFive(){\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n        this.increment()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Count - {this.state.count}</div>\r\n                <button onClick={()=>this.increment()}>Increment</button>\r\n                <button onClick={()=>this.incrementFive()}>Increment 5x</button>\r\n                <button onClick={()=>this.decrement()}>Decrement</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter\r\n","import React, { Component } from 'react'\r\n\r\nclass ClassClick extends Component {\r\n    clickHandler(){\r\n        console.log(\"Clicked the button\")\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.clickHandler}>Class Click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassClick\r\n","import React from 'react'\r\n\r\nfunction FunctionClick() {\r\n    function clickHandler(){\r\n        console.log(\"Button clicked\");\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={clickHandler}>Click</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FunctionClick\r\n","import React, { Component } from 'react'\r\n\r\nclass EventBind extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             message: \"Hello\",\r\n        }\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n    clickHandler(){\r\n        this.setState({\r\n            message: \"Goodbye\",\r\n        });\r\n    }\r\n    // clickHandler = ()=>{this.setState({message:\"Goodbye\"})}\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1>{this.state.message}</h1>\r\n                </div>\r\n                {/* <button onClick={this.clickHandler}>Click</button> */}\r\n                {/* <button onClick={()=>this.clickHandler()}>Click</button> */}\r\n                <button onClick={this.clickHandler}>Click</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventBind\r\n","import React from 'react'\r\n\r\nfunction ChildComponent(props) {\r\n    return (\r\n        <div>\r\n            <button onClick={()=>props.greetHandler('child')}>Greet Parent</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChildComponent\r\n","import React, { Component } from 'react'\r\nimport ChildComponent from './ChildComponent'\r\n\r\nclass ParentComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             parentName: 'Parent'\r\n        }\r\n        this.greetParent = this.greetParent.bind(this)\r\n    }\r\n    greetParent(childName){\r\n        alert(`Hello ${this.state.parentName} from ${childName}`)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               <ChildComponent greetHandler={this.greetParent}></ChildComponent>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ParentComponent\r\n","import React, { Component } from 'react'\r\n\r\nfunction UserName(props){\r\n    return (\r\n        props.isLogged ? <div><h1>Welcome Mat</h1></div> : <div><h1>Welcome Guest</h1></div>\r\n    );\r\n}\r\n\r\nclass UserGreeting extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             isLoggedIn:false\r\n        }\r\n        this.logInHandler = this.logInHandler.bind(this);\r\n    }\r\n    logInHandler(){\r\n        this.setState({\r\n            isLoggedIn: true\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <UserName isLogged={this.state.isLoggedIn}/>\r\n                <button onClick={this.logInHandler}>Login</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserGreeting\r\n","import React, { Component } from 'react'\r\n\r\nfunction UserName(props){\r\n    return(\r\n        <div>\r\n            <label>Username</label>\r\n            <input type='text' value={props.username} onChange={props.handleUsernameChange}></input>\r\n        </div>\r\n    )\r\n}\r\nfunction Comments(props){\r\n    return(\r\n        <div>\r\n            <label>Comments</label>\r\n            <textarea value={props.comments} onChange={props.handleCommentsChange}></textarea>\r\n        </div>\r\n    )\r\n}\r\nfunction Topics(props){\r\n    const topicsList = props.topics;\r\n    return(\r\n        <div>\r\n            <label>Topic</label>\r\n            <select value={props.selTopic} onChange={props.handleTopicChange}>\r\n                {topicsList.map(topic=> <option value={topic}>{topic}</option>)}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             username:'',\r\n             comments:'',\r\n             topic:'React'\r\n        }\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\r\n        this.handleCommentsChange = this.handleCommentsChange.bind(this)\r\n        this.handleTopicChange = this.handleTopicChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n    handleUsernameChange = (event)=>{\r\n        this.setState({\r\n            username:event.target.value\r\n        })\r\n    }\r\n    handleCommentsChange = (event)=>{\r\n        this.setState({\r\n            comments:event.target.value\r\n        })\r\n    }\r\n    handleTopicChange = (event)=>{\r\n        this.setState({\r\n            topic:event.target.value\r\n        })\r\n    }\r\n    handleSubmit = (event)=>{\r\n        alert(` Username : ${this.state.username}, Comment: ${this.state.comments}, Skill: ${this.state.topic}`)\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        const topics = ['React','Angular','Vue'];\r\n        return (\r\n            <div>\r\n                <h1>Forms Basic</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <UserName username={this.state.username} handleUsernameChange={this.handleUsernameChange}></UserName>\r\n                    <Comments comment={this.state.comments} handleCommentsChange={this.handleCommentsChange}/>\r\n                    <Topics topics={topics} selTopic={this.state.topic} handleTopicChange={this.handleTopicChange}></Topics>\r\n                    <button type='submit'>Submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Greet from './components/Greet'\r\nimport Welcome from './components/Welcome'\r\nimport Message from './components/Message'\r\nimport Counter from './components/Counter'\r\nimport FunctionClick from './components/FunctionClick'\r\nimport ClassClick from './components/ClassClick'\r\nimport EventBind from './components/EventBind';\r\nimport ParentComponent from './components/ParentComponent';\r\nimport UserGreeting from './components/UserGreeting';\r\nimport NameList from './components/NameList';\r\nimport StyleSheet from './components/StyleSheet';\r\nimport Inline from './components/Inline';\r\nimport './appStyles.css'\r\nimport styles from './appStyles.module.css'\r\nimport Form from './components/Form';\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Form></Form>\r\n        {/* <h1 className='error'>Error</h1>\r\n        <h1 className={styles.success}>Success</h1>\r\n        <Inline></Inline>\r\n        <StyleSheet primary={true}></StyleSheet> */}\r\n        {/* <NameList></NameList> */}\r\n        {/* <UserGreeting></UserGreeting> */}\r\n        {/* <ParentComponent></ParentComponent> */}\r\n        {/* <EventBind></EventBind> */}\r\n        {/* <FunctionClick></FunctionClick> */}\r\n        {/* <ClassClick></ClassClick> */}\r\n        {/* <Counter></Counter>\r\n        <Greet name =\"Bruce\" heroName=\"Batman\"></Greet>\r\n        <Welcome name =\"Bruce\" heroName=\"Batman\"/> */}\r\n        {/* <Message/> */}\r\n  \r\n        {/* <h1>Functional Statement</h1>\r\n        <hr></hr>\r\n        <Greet name =\"Bruce\" heroName=\"Batman\">\r\n          <p>I am dark knight</p>\r\n        </Greet>\r\n        <Greet name =\"Clark\" heroName= \"Superman\">\r\n          <button>Click me</button>\r\n        </Greet>\r\n        <Greet name =\"Diana\" heroName= \"Wonderwoman\"/>\r\n        <hr></hr>\r\n        <h1>Class Statement</h1>\r\n        <hr></hr>\r\n        <Welcome name =\"Bruce\" heroName=\"Batman\"/>\r\n        <Welcome name =\"Clark\" heroName= \"Superman\"/>\r\n        <Welcome name =\"Diana\" heroName= \"Wonderwoman\"/> */}\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n  \r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}